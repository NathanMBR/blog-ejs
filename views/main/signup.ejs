<%- include("../partials/header.ejs") %>
<%- include("../partials/navbar.ejs") %>
<%- include("../partials/flash.ejs") %>

<h1 class="mt-4">Create account</h1>
<hr>
<form action="/signup" method="POST">
    <div class="card">
        <div class="card-body">
                <label for="username">Username:</label>
                <input type="text" name="username" class="form-control" placeholder="Username (must have at least <%= minUsernameSize %> characters)" id="username" required>

                <div id="validateRegexUsername"></div>
                <div id="validateLengthUsername"></div>

                <label for="email">E-mail:</label>
                <input type="email" name="email" class="form-control" placeholder="E-mail" id="email1" required>

                <label for="confirm-email">Confirm e-mail:</label>
                <input type="email" name="confirm-email" class="form-control" placeholder="Confirm e-mail" id="email2" required>

                <div id="validateEmail" ></div>

                <label for="password">Password:</label>
                <input type="password" name="password" class="form-control" placeholder="Password (must have at least <%= minPasswordSize %> characters)" id="password1" required>
                
                <label for="confirm-password">Confirm password:</label>
                <input type="password" name="confirm-password" class="form-control" placeholder="Confirm password" id="password2" required>

                <div id="validateEqualPassword"></div>
                <div id="validateLengthPassword"></div>
        </div>
    </div>
    <button type="submit" class="btn btn-outline-success mt-4" id="submitButton">Create account</button>
</form>
<a href="/home" class="btn btn-outline-secondary mt-2 mb-2">Go back</a>

<script>
    // Submit conditions
    let isUsernameRegexValid =  false;
    let isUsernameLengthValid = false;
    let isEmailValid =          false;
    let isPasswordEqual =       false;
    let isPasswordLengthValid = false;

    // Inputs
    const username =    document.querySelector("#username");
    const email1 =      document.querySelector("#email1");
    const email2 =      document.querySelector("#email2");
    const password1 =   document.querySelector("#password1");
    const password2 =   document.querySelector("#password2");

    // Exhibition elements
    const validateRegexUsername =   document.querySelector("#validateRegexUsername");
    const validateLengthUsername =  document.querySelector("#validateLengthUsername");
    const validateEmail =           document.querySelector("#validateEmail");
    const validateEqualPassword =   document.querySelector("#validateEqualPassword");
    const validateLengthPassword =  document.querySelector("#validateLengthPassword");

    // Error elements
    const usernameValidError =  document.createElement("div");
    const usernameLengthError = document.createElement("div");
    const emailError =          document.createElement("div");
    const passwordEqualError =  document.createElement("div");
    const passwordLengthError = document.createElement("div");
    
    // Error messages
    usernameValidError.innerHTML =  "Invalid username (it must contain only alphanumerical characters).";
    usernameLengthError.innerHTML = "The username is too short (it must have at least <%= minUsernameSize %> characters).";
    emailError.innerHTML =          "The emails aren't the same.";
    passwordEqualError.innerHTML =  "The passwords aren't the same.";
    passwordLengthError.innerHTML = "The password is too short (it must have at least <%= minPasswordSize %> characters).";

    // Classes
    usernameValidError.classList.add("alert");
    usernameValidError.classList.add("alert-danger");
    usernameValidError.classList.add("mt-2");

    usernameLengthError.classList.add("alert");
    usernameLengthError.classList.add("alert-danger");
    usernameLengthError.classList.add("mt-2");

    emailError.classList.add("alert");
    emailError.classList.add("alert-danger");
    emailError.classList.add("mt-2");

    passwordEqualError.classList.add("alert");
    passwordEqualError.classList.add("alert-danger");
    passwordEqualError.classList.add("mt-2");

    passwordLengthError.classList.add("alert");
    passwordLengthError.classList.add("alert-danger");
    passwordLengthError.classList.add("mt-2");

    // Other
    const submitButton = document.querySelector("#submitButton");
    const regExp = /[^a-zA-Z\d]/g;
    submitButton.disabled = true;

    // Validation code
    const validate = () => {
        // Username regex validation
        if (username.value !== "") {
            if (username.value.match(regExp)) {
                if (validateRegexUsername.children.length === 0)
                    validateRegexUsername.appendChild(usernameValidError);
                isUsernameRegexValid = false;
            } else {
                if (validateRegexUsername.children.length > 0)
                    validateRegexUsername.removeChild(usernameValidError);
                isUsernameRegexValid = true;
            }
        } else {
            if (validateRegexUsername.children.length > 0)
                validateRegexUsername.removeChild(usernameValidError);
            isUsernameRegexValid = false;
        }
        
        // Username length validation
        if (username.value !== "" && username.value.length < <%= minUsernameSize %>) {
            if (validateLengthUsername.children.length === 0)
                validateLengthUsername.appendChild(usernameLengthError);
            isUsernameLengthValid = false;
        } else {
            if (validateLengthUsername.children.length > 0)
                validateLengthUsername.removeChild(usernameLengthError);
            isUsernameLengthValid = true;
        }

        // Emails equal validation
        if (email1.value !== "" && email2.value !== "") {
            if (email1.value !== email2.value) {
                if (validateEmail.children.length === 0)
                    validateEmail.appendChild(emailError);
                isEmailValid = false;
            } else {
                if (validateEmail.children.length > 0)
                    validateEmail.removeChild(emailError);
                isEmailValid = true;
            }
        } else {
            if (validateEmail.children.length > 0)
                validateEmail.removeChild(emailError);
        }

        // Password equal validation
        if (password1.value !== "" && password2.value !== "") {
            if (password1.value !== password2.value) {
                if (validateEqualPassword.children.length === 0)
                    validateEqualPassword.appendChild(passwordEqualError);
                isPasswordEqual = false;
            } else {
                if (validateEqualPassword.children.length > 0)
                    validateEqualPassword.removeChild(passwordEqualError);
                isPasswordEqual = true;
            }
        } else {
            if (validateEqualPassword.children.length > 0)
                validateEqualPassword.removeChild(passwordEqualError);
        }

        // Password length validation
        if (password1.value !== "" && password1.value.length < <%= minPasswordSize %> && password2.value.length < <%= minPasswordSize %>) {
            if (validateLengthPassword.children.length === 0)
                validateLengthPassword.appendChild(passwordLengthError);
            isPasswordLengthValid = false;
        } else {
            if (validateLengthPassword.children.length > 0)
                validateLengthPassword.removeChild(passwordLengthError);
            isPasswordLengthValid = true;
        }

        // Submit button
        if (isUsernameRegexValid && isUsernameLengthValid && isEmailValid && isPasswordEqual && isPasswordLengthValid)
            submitButton.disabled = false;
        else
            submitButton.disabled = true;
        
        requestAnimationFrame(validate);
    }

    requestAnimationFrame(validate);
</script>

<%- include("../partials/footer.ejs") %>